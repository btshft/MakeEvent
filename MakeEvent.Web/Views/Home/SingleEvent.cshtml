@model MakeEvent.Web.Models.Common.EventWithTicketsMvcViewModel

<div class="events-wrapper">
    <div class="row">
        <div class="col-md-6">
            <div class="card hoverable">
                @if (Model.ImageData != null && Model.ImageData.Length > 0)
                {
                    <img src="data:@Model.ImageMimeType;base64,@Convert.ToBase64String(Model.ImageData)" style="max-height: 400px; max-width: 400px;" />
                }
                <div class="card-content">
                    <label class="event-title">@Html.DisplayFor(m => Model.Name)</label>
                    <p class="event-date">@Html.DisplayFor(m => Model.StartDate) - @Html.DisplayFor(m => Model.EndDate)</p>
                    <p class="event-adress">
                        @Html.DisplayFor(m => Model.City)
                        @Html.DisplayFor(m => Model.Street)
                        @Html.DisplayFor(m => Model.Office)
                    </p>
                    <p class="event-description">@Html.DisplayFor(m => Model.Description)</p>
                </div>
            </div>
        </div>
        @if (Model.Tickets != null)
        {
            <div class="tickets col-md-5">
                <div class="card hoverable">
                    <h5>@Localization.HeaderTicketsText</h5>
                    <div class="card-content">
                        <table class="table table-striped">
                            <tr>
                                <th>@Localization.TicketCategoryVmType</th>
                                <th>@Localization.TicketCategoryVmDescription</th>
                                <th>@Localization.TicketCategoryVmPrice</th>
                            </tr>
                            @foreach (var item in Model.Tickets)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayNameFor(model => item.Type)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.Price)
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (ViewBag.TicketTypes != null)
{
    <button class="btn buy blue darken-3">@Localization.BtnBuyTicketText</button>

    using (Html.BeginForm("Buy", "Ticket", new { eventId = ViewBag.EventId }, FormMethod.Post, new { id = "createform" }))
    {
        <div class="form-horizontal ticketform">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.OwnerFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.OwnerFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.OwnerFirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Ticket.CategoryId, ViewBag.TicketTypes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Ticket.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.Cost, new { htmlAttributes = new { @class = "form-control", disabled = "true" } })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="javascript:document.getElementById('createform').submit()" class="btn btn-default blue darken-3">@Localization.BtnBuyTicketText</a>
                </div>
            </div>
        </div>
    }
}
else
{
    <p>На данное мероприятие пока что нельзя записаться.</p>
}
<script type="text/javascript">

    function updatePrice(ticketSelect) {
        $.getJSON("@Url.Action("GetTicketPrice", "Ticket")" + "?ticketCategoryId=" + ticketSelect.val(),
            function (data) { $("#Ticket_Cost").val(data.data); });
    }

    $(document).ready(function () {
        $('.ticketform').hide();
        $('.buy').click(function () {
            if ($('.ticketform').css('display') == 'none') {
                $('.ticketform').show();
            }
            else {
                $('.ticketform').hide();
            }
        });

        $("#Ticket_CategoryId").change(function () {
            updatePrice($(this));
        });

        updatePrice($("#Ticket_CategoryId"));

    });
</script>
