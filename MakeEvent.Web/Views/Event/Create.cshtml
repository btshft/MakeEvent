@using System.Globalization
@using System.Threading

@model MakeEvent.Web.Models.Organization.EventMvcViewModel
@{
    Layout = "~/Views/Shared/_OrgLayout.cshtml";

    var culture = Thread.CurrentThread.CurrentCulture;
    var dateformat = culture.DateTimeFormat.ShortDatePattern;
}
<div class="main-page">
    @using (Html.BeginForm("Create", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OrganizationId)

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShortDescripton, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShortDescripton, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortDescripton, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control DateTime" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control DateTime" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="position:relative;">
                    <a class='btn  deep-purple lighten-' href='javascript:;'>
                        @Localization.BtnChoosePicture
                        <input type="file" name="Image" size="40"
                               style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                               onchange='$("#upload-file-info").html($(this).val());'>
                        <span class="glyphicon glyphicon-paperclip"></span>
                    </a>
                    <span class='label label-info' id="upload-file-info"></span>
                </div>
                @if (Model.ImageData == null)
                {
                    <div class="form-control-static">@Localization.LabelNoPicture</div>
                }
                else
                {
                    <img class="img-thumbnail" width="150" height="150"
                         src="@Url.Action("GetImage", "Event",
                        new { Model.Id })" />
                }
            </div>



            <div class="form-group">
                <div class="form-group">
                    <button type="submit" class="btn indigo darken-1 btn-sm btn-default">
                        @Localization.BtnCreateText
                        <span class="glyphicon glyphicon-send"></span>
                    </button>
                    <button class="btn deep-purple lighten-1  btn-sm btn-default">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                        @Html.ActionLink(Localization.BtnBackText, "Index")
                    </button>
                </div>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('.DateTime').kendoDatePicker({
            format: "@dateformat"
        });
    });
</script>